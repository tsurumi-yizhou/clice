import{_ as a,c as i,o as n,ae as t}from"./chunks/framework.U1Gow_7P.js";const p=JSON.parse('{"title":"Inlay Hint","description":"","frontmatter":{},"headers":[],"relativePath":"feature/inlay-hint.md","filePath":"en/feature/inlay-hint.md"}'),o={name:"feature/inlay-hint.md"};function r(l,e,d,c,s,u){return n(),i("div",null,e[0]||(e[0]=[t('<h1 id="inlay-hint" tabindex="-1">Inlay Hint <a class="header-anchor" href="#inlay-hint" aria-label="Permalink to &quot;Inlay Hint&quot;">​</a></h1><h2 id="supported-case" tabindex="-1">Supported Case <a class="header-anchor" href="#supported-case" aria-label="Permalink to &quot;Supported Case&quot;">​</a></h2><ol><li>Type hint for variable declared with <code>auto</code> keywords in <code>function/if/for/structure-binding</code>.</li><li>Return type hint for <code>function/lambda</code> body.</li><li>Parameter name in function call expression.</li><li>Block end hint for <code>struct/class/enum</code> declaration and <code>function/lambda</code> body.</li><li>Array index for elements in initialize list expression.</li><li>Value of <code>sizeof</code> and <code>alignof</code> in <code>struct/class</code> defination.</li></ol><p>There is a configurable option, and some examples.</p>',4)]))}const h=a(o,[["render",r]]);export{p as __pageData,h as default};
